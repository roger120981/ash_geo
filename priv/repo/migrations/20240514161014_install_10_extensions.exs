defmodule AshGeo.Test.Repo.Migrations.Install10Extensions20240514161012 do
  @moduledoc """
  Installs any extensions that are mentioned in the repo's `installed_extensions/0` callback

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    execute("CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"")
    execute("CREATE EXTENSION IF NOT EXISTS \"citext\"")
    execute("CREATE EXTENSION IF NOT EXISTS \"fuzzystrmatch\"")
    execute("CREATE EXTENSION IF NOT EXISTS \"address_standardizer\"")
    execute("CREATE EXTENSION IF NOT EXISTS \"address_standardizer_data_us\"")
    execute("CREATE EXTENSION IF NOT EXISTS \"postgis\"")
    execute("CREATE EXTENSION IF NOT EXISTS \"postgis_sfcgal\"")
    execute("CREATE EXTENSION IF NOT EXISTS \"postgis_tiger_geocoder\"")
    execute("CREATE EXTENSION IF NOT EXISTS \"postgis_topology\"")
    execute("CREATE EXTENSION IF NOT EXISTS \"postgis_raster\"")
  end

  def down do
    # Uncomment this if you actually want to uninstall the extensions
    # when this migration is rolled back:
    # execute("DROP EXTENSION IF EXISTS \"uuid-ossp\"")
    # execute("DROP EXTENSION IF EXISTS \"citext\"")
    # execute("DROP EXTENSION IF EXISTS \"fuzzystrmatch\"")
    # execute("DROP EXTENSION IF EXISTS \"address_standardizer\"")
    # execute("DROP EXTENSION IF EXISTS \"address_standardizer_data_us\"")
    # execute("DROP EXTENSION IF EXISTS \"postgis\"")
    # execute("DROP EXTENSION IF EXISTS \"postgis_sfcgal\"")
    # execute("DROP EXTENSION IF EXISTS \"postgis_tiger_geocoder\"")
    # execute("DROP EXTENSION IF EXISTS \"postgis_topology\"")
    # execute("DROP EXTENSION IF EXISTS \"postgis_raster\"")
  end
end
